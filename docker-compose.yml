version: '3.9'

services:
  postgres:
    container_name: ${POSTGRES_CONTAINER_NAME:-keycloak_db}
    image: postgres:${POSTGRES_VERSION:-16}
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB_NAME:-keycloak}
      POSTGRES_USER: ${POSTGRES_USER:-keycloak}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-keycloak_password}
    ports:
      - ${POSTGRES_PORT:-5432}:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - default
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-keycloak} -d ${POSTGRES_DB_NAME:-keycloak}"]
      interval: 10s
      timeout: 5s
      retries: 5

  keycloak:
    container_name: ${KEYCLOAK_CONTAINER_NAME:-keycloak_app}
    image: quay.io/keycloak/keycloak:${KEYCLOAK_VERSION:-23.0.3}
    restart: unless-stopped
    environment:
      KC_DB: postgres
      KC_DB_URL_HOST: postgres
      KC_DB_URL_DATABASE: ${POSTGRES_DB_NAME:-keycloak}
      KC_DB_USERNAME: ${POSTGRES_USER:-keycloak}
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD:-keycloak_password}
      KC_METRICS_ENABLED: ${KC_METRICS_ENABLED:-true}
      KC_LOG_LEVEL: ${KC_LOG_LEVEL:-INFO}
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN:-admin}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD:-admin_password}
    ports:
      - ${KEYCLOAK_PORT:-8080}:8080
    volumes:
      - keycloak-themes:/opt/keycloak/themes
    networks:
      - default
    depends_on:
      - postgres
    command: start-dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/ready"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  default:
    name: keycloak_network
    driver: bridge

volumes:
  postgres-data:
    name: keycloak_postgres_data
    driver: local
  keycloak-themes:
    name: keycloak_themes
    driver: local